ruby:
  total = 0
  expenses_order = []
  @expenses.each do |k,v|
    expenses_order << k
    total += v
  end

table.summary-table
  tr
    td style="vertical-align: top"
      div#svg-graph
        svg viewBox="0 0 300 300" width="300px" height="300px"
          circle cx="0" cy="0" r="150" fill="#eee" transform="translate(150 150)"
          g#arcs transform="translate(150 150)"
            /path d="M0 0L0 150A150 150 0 0 1 -150 0Z" fill="#f0f"
    td
      table
        - @expenses.each do |k,v|
          tr
            td
            td
            td style="background: #444; color: white;"
              a href=path_to(:tag_summary).with(@year, k) = @tags[k][:title]
            td.money == money_format(v, $main_currency.id)
            td = "#{ (v/total*100).round(1) }%"
          - @expenses_sub[k].each do |k2,v2|
            tr class="expense-row expense-#{k2}"
              td
              td
              td
                a href=path_to(:tag_summary).with(@year, k2) = @tags[k2][:title]
              td.money == money_format(v2, $main_currency.id)
              td = "#{ (v2/total*100).round(1) }%"

javascript:
  $(function(){
    var radius = 150;

    function createSvgArc (startAngle, endAngle, largeArc) {
      return ['M', 0, 0,
              'L', Math.cos(startAngle)*radius, 0-(Math.sin(startAngle)*radius), 
              'A', radius, radius, 0, largeArc, 0, Math.cos(endAngle)*radius, 0-(Math.sin(endAngle)*radius),
              'Z'].join(' ');
    }

    var colors = ['#f6c715', '#d95c3c', '#4588a3', '#1e3a50', '#bfd1b9', '#ce7790', '#35ba92', '#68703f', '#b2b1af'];
    var colorIndex = 0;
    var expenses = #{{@expenses.to_json}};
    var expenses_order = #{{expenses_order.to_json}};
    var expenses_sub = #{{@expenses_sub.to_json}}
    var expenses_sub_order = #{{ @expenses_sub.map{|k,v|{k => v.map{|k,v|k}}}.reduce(:merge).to_json  }}
    var total = #{total};

    var startAngle = 0;
    for (var i = 0; i < expenses_order.length; i++) {
      var key = expenses_order[i];
      var part = expenses[key] / total;
      endAngle = startAngle + Math.PI * 2 * part;
      var color = colors[colorIndex];

      $('<path />').attr('d', createSvgArc(startAngle, endAngle, part > 0.5 ? 1 : 0)).attr('fill', color).appendTo($('#arcs'));

      var subKeys = expenses_sub_order[key];
      for (var j = 0; j < subKeys.length; j++) {
        var subKey = subKeys[j];
        var subPart = expenses_sub[key][subKey] / total;
        
        var subEndAngle = startAngle + Math.PI * 2 * subPart;
        $('<path />').attr('d', createSvgArc(startAngle, subEndAngle, subPart > 0.5 ? 1 : 0)).attr('stroke', '#FFFFFF').attr('fill', color).attr('class', "expense-row").attr('data-id', subKey).appendTo($('#arcs'));
        startAngle = subEndAngle;
      }

      startAngle = endAngle;
      colorIndex = colorIndex + 1;
      if (colorIndex >= colors.length) { colorIndex = 0; }
    }
    $("#svg-graph").html($("#svg-graph").html());
    hover_functions();
  });

